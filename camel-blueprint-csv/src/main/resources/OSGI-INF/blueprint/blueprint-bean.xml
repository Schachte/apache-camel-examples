<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
         http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
         http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
         http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <cm:property-placeholder persistent-id="org.darugna.camel.csv">
        <cm:default-properties>
            <cm:property name="output.format" value="CSV" />
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="peek" class="org.darugna.camel.csv.Peek"/>
    
    <bean id="stats" class="org.darugna.camel.csv.Stats" />
    <!--
        Start of bundle may fail with message:
        Bundle [...] is waiting for dependencies [(&(dataformat=bindy)(objectClass=org.apache.camel.spi.DataFormatResolver))]

        As a workaround declare bindy reference here
        http://camel.465427.n5.nabble.com/camel-bindy-amp-OSGi-td5774525.html
    -->
    <reference id="bindy" 
               interface="org.apache.camel.spi.DataFormatResolver"
               timeout="30000"/> 
    
    <camelContext id="blueprint-bean-context" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="ImportCsv">
            <from uri="file:data/import?moveFailed=error"/>
            <log message="Importing file ${header.CamelFileName}" />
            <unmarshal>
                <bindy type="Csv" classType="org.darugna.camel.csv.dto.Company" />
            </unmarshal>
            <log message="The message contains ${body.size} elements"/>
            <multicast>
                <to uri="seda:stats"/>
            </multicast>
        </route>
        
        <route id="">
            <from uri="seda:stats" />
            <to uri="bean:stats" />
        </route>
    </camelContext>

</blueprint>
